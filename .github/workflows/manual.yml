# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manuallyzz triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet!'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - uses: actions/checkout@master
      with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

    - name: Get CurrentCommit
      id: branch_data
      run: |
          CURRENT_BRANCH_COMMIT_MESSAGE=$(git log --format=%B -n 1 $(git log -1 --pretty=format:"%h") | cat -)
          echo "::set-output name=current_commit_message::$CURRENT_BRANCH_COMMIT_MESSAGE"

    - name: Print current commit 
      run: |
            echo ${{steps.branch_data.outputs.current_commit_message}}

    - uses: actions-ecosystem/action-regex-match@v2
      id: last-commit-regex-match
      with:
        text: ${{steps.branch_data.outputs.current_commit_message}}
        regex: '(latest version)'

    - name: exit_if_last_commit_is_same_as_before
      if: ${{ steps.last-commit-regex-match.outputs.match != '' }}
      run: |
          echo "You don't have new commits ðŸ›‘!"
          exit 0

    - name: exit_good
      run: |
          echo "Good!!!!"
    
