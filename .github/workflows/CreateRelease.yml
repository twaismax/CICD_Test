name: BeeHomeCreateReleaseCandidate
on:
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  BeeHomeCreateReleaseCandidateActions:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - run: echo "Getting version"
      - uses: actions/checkout@master
        with:
            persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
            fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirments.txt
          pip install -r ci_requirments.txt
      - name: Set Credentials      
        run: |
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
      
      - run: echo "Update Version And Creat Local Tag"
      - name: UpdateVersionAndCreateLocalTag
        run: |
            
            python ./.github/Versions/VersionUpdateScript.py inc-minor
            VERSION=$(python ./.github/Versions/VersionUpdateScript.py get_version)
            git tag -a $VERSION  -m "latest version"
            git add .github/Versions/VersionFile.txt
            git commit -m "UpdatedRelase branch"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.MY_TOKEN }}
          branch: ${{ github.head_ref }} 
          
      - run: echo "Branch creation"
      - name: Create release branch
        run: |
            RELEASE_BRANCH_NAME=$(python ./.github/Versions/VersionUpdateScript.py get_release_branch_name)
            echo $RELEASE_BRANCH_NAME
            git checkout -b $RELEASE_BRANCH_NAME
            git branch
        id: create_release_branch
        
      - name: update version on new branch
        run: |
            echo (steps.create_release_branch.outputs)
            python ./.github/Versions/VersionUpdateScript.py create_initial_version_for_release
            git add .github/Versions/VersionFile.txt
            git commit -m "initial version for rc set"
      - name: Push to branch github
        run: |
            git push -u https://github.com/twaismax/CICD_Test.git --all
     
  
